----------------------------------------------------------------------------------------------------------------------------------------

一、云图生活后台快速开发框架介绍
$.什么是云图生活后台快速开发框架
云图生活快速开发框架（以下简称后台框架）是云图生活技术部后台开发的一套基于公司内部业务的快速开发框架；
主要用于支撑各项目组的公共模块以及快速响应各项目组复杂多变的业务；
后台框架主要包含两部分，
(1).一套完整的代码自动生成工具
(2).一套基于spring-mvc，mybatis3.4.1的web框架


$.适用哪些项目：
如果你的项目是一个java web项目，数据库使用的是mysql或者是oracle,而且打算用mybatis做dao层实现，那么你可以选择使用该框架方便快捷的构建你的web项目。

如果你的项目能满足下面这些特性，将会大大减少甚至几乎不会有针对后台框架的二次开发，你几乎可以瞬间搭建起一个项目的所有代码，而且在这之上的业务开发会变得方便快速而且易于拓展。
(1).数据库设计满足BNCF范式
(2).数据库有良好的命名规范，表名均已T_打头，视图以V_打头，不存在联合主键，且主键命名为ID或者*_ID(如ROLE_ID)，主键类型为整形或长整形。
(3).表与表之间的外键关系明确，不存在多对多的关系。比如都是一个表的非主键字段关联另外一个表的主键，这种关联形式最佳。
(4).数据库的表名，列名，视图名大小写不敏感

后台框架主要用于公司内部项目，很多模块和特性均由框架底层直接实现，在扩展性上会有一些损失，所以不建议具有以下特性的项目使用本框架：
1.报表类，数据分析类项目；
2.需求特殊，需要对底层进行大量二次开发的项目；


$.关于后台框架的更新
后台框架的所有包和源码都在公司内部的maven私库上，
私库地址：具体查看附件中的maven-settings.xml


$.关于后台框架的问题
后台框架现在处于测试阶段，目前在mysql数据库上运行良好；
如果使用oracle，可能出现一些未知的问题；
如果在使用过程中有任何疑问或bug，可以邮件至wangbing@shindoo.com


----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------


二、如何使用代码生成工具
环境准备：windows系统，已经安装jdk1.7，带有maven插件的eclipse（web版）

$.首先你要有一套excel配置（最好使用example中的示例excel进行配置，以免excel版本不符导致poi无法解析）。
配置文件必须包括以下sheet页（不一定要放在同一个excel文件中，但是excel中不可有其他无关的sheet页）：

db:数据库连接信息和模块信息，包含以下列
模块名：如果项目中只涉及到一个数据库连接，可以不填。如果项目使用到多个数据库连接，需要给每个连接设置一个唯一的模块名（可以有一个模块设置为空）。
数据库类型：oracle或者mysql	(暂时只支持这两种)
url: 数据库连接url
user: 数据库用户名
password：user对应的密码

base:配置数据库表基础信息的配置文件，包含以下列
表名：数据库对应的表名
中文描述：数据库表的中文描述，可不填，一般用于注释
模块：对应数据库连接的模块名（见DB模块名，不填代表默认）
缓存: NOT，ALL中的一种，默认为NOT。
序列号：mysql数据库默认会将主键设置为自增列，只有oracle数据库可配置，配置内容为当前表主键对应的序列号，也可以选填autocreate，工具会根据表名自动生成序列
默认排序字段：此功能尚未开发  TODO
备注：仅仅是备注而已

error_code：错误码配置文件，包含以下列
名称：错误码的名字，使用全大写加下划线的格式（因为最终会生成java常量）
key：错误码的ID，必须大于1000（1000以下的为公共错误码）
语言：错误码信息

language：配置语言资源的配置文件，包含以下列
名称：语言资源的名字，使用全大写加下划线的格式（因为最终会生成java常量）
语言：语言信息

constants：配置常量的配置文件，包含以下列
名称：常量的名字，使用全大写加下划线的格式（因为最终会生成java常量）
值：常量的值
备注：仅仅是备注而已，你喜欢填就好

types：配置枚举型常量的配置文件，包含以下列
名称：枚举常量的名字，使用全大写加下划线的格式（因为最终会生成java常量）
值：常量的值
备注：仅仅是备注而已，你喜欢填就好

base中配置的各个表的信息配置，sheet页命名为表名，包含以下列
字段名称：对应的字段名称
字段类型：对应的字段类型（工具为了兼容多种数据库，这里的类型使用java类型区分，可填以下类型：int,long,double,float,BigDecimal,date,string,text,blob,boolean和types中定义的枚举）
长度：当字段类型为string,text,bolb时，需要设置长度，其余都不需要
是否可以为空：用于生成sql用，可不填
主外键信息：对于自动生成的javabean对象至关重要，请如实配置。配置规则如下，如果为主键，直接填写PK，如果为外键，配置为FK(关联的表.关联的字段#关系类型)，关系类型有四种，1:1，n:1, 1:n，n:n。但实际上只会出现1:1和n:1两种情况，默认为n:1
默认值：用于生成sql用，可不填
备注：仅仅是备注而已，你喜欢填就好
（PS：表格配置的第一行必须为标题，不管是否为注释行都会被忽略掉）

cache：配置缓存信息的配置文件，如果base配置中有表使用了缓存，需要配置cache，暂时只支持redis的配置，配置格式见示例即可。

其他配置文件
如果有其他需要，自行配置，可以参照cache的配置，配置格式必须为key，value格式，工具会自动生成Config常量类

2.运行hhnzBatis的代码生成工具（仅支持windows环境）
(1).下载“代码生成工具.rar”到本地，解压。
(2).打开目录下的文件init/config/project.properties，根据示例进行配置
project_url：你需要生成代码的工程所在目录，如果不存在，会自动创建
project_name：你的项目名称，同时在工程路径命名时也会使用到次参数，所以请根据java包命名规范填写。如test,baidu.news
config_url：第一步中所提到的配置文件路径，如果有多个，使用逗号隔开。如E:\ht\branches\crawler\config\config.xlsx,E:\ht\branches\crawler\config\lhh.xlsx
need_create_code：是否重新生成代码（0代表否，1代表是，默认为1）
need_create_web：是否生成前端代码。实际生产项目前端界面都需进行二次开发，代码生成工具只会生成一些最基本的增删改查模板。（0代表否，1代表是，默认为0）
need_sync_db：是否同步表结构到数据库（0代表否，1代表是，默认为0，详细说明可以查看高级用法中的“配置文件同步到数据库”）
need_autocreate_am：是否自动创建权限系统（0代表否，1代表是，默认为0，详细用法可以查看高级用法中的“权限系统”）
(3).点击解压文件根目录下的start.bat

3.部署工程
打开eclipse，以maven工程导入工程（第二步中project_url指定的路径即为工程路径）
然后就没有然后了，
该工程可以直接打包在web容器中运行，或者直接在eclipse的web容器中调试运行


----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------


三、一些常用api
1.service的扩展
2.add操作
3.delete操作
4.update操作
5.select操作
6.controller如何返回结果
7.如何调用语言资源
8.如何使用枚举
9.如何记录日志


----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------


四、高级用法
如果你的配置文件非常规范，该配置的表，主键和外键都配了，该配置的错误码，常量全有。而且你的业务逻辑中并不存在特别特殊的情况下，那么我很高兴的告诉你，你并不需要阅读以下部分，除非你确实感兴趣。

1.接口返回结果自定义
2.特殊的连接查询
3.连表分页
4.dubbo服务化
5.三方平台接口调用
6.配置文件同步到数据库
(1).工具只会对表进行增改查，并不会创建用户或创建数据库实例等。所以请预先准备好数据库环境并创建好用户，不然无法同步。
(2).如果数据库中已经有表而且配置文件中也有配置，我们会对比配置文件和数据库表中的字段及字段类型进行同步。但是如果数据库中已经有了数据，导致字段类型无法修改，我们也爱莫能助。
(3).如果数据库中已经有表但是在配置文件中不存在，这种时候，我们并没有对数据库中的表进行drop，但我们会打印出日志指出多余的表。对于这种表我们无法判断是否需要保留或是删除，这种只能留给您自行处理。
7.权限系统


----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------


五、hhnzBatis配置文件自动生成
如果你的项目是一个已经做过数据库设计的项目，而且已经在某个关系数据库建立了表和视图，那么你如果想使用hhnzBatis，可以使用“配置文件自动生成工具”来帮你生成配置文件。
1.下载“配置文件生成工具.rar”到本地，解压。
2.打开目录下的文件init/config/ds.properties，根据示例进行配置
可以配置多个数据库，后缀以模块名结尾，如果模块名为空，配置db_driver,db_url,db_user,db_password即可
db_driver_modulename：driver配置
db_url_modulename：数据库连接url
db_user_modulename：数据库用户名
db_password_modulename：user对应的密码
3.点击解压文件根目录下的start.bat


----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------


六、QA
1.常量使用配置文件是可以理解的，那为什么数据库的设计要使用配置文件，不直接使用数据库？
因为作者在实际工作中，发现很多开发喜欢直接修改数据库，在缺少良好的沟通机制的情况下会变得非常糟糕，A数据库缺失一个表，B数据库多出一个字段经常发生，而且在迁移数据库时处理难度非常大（测试库迁移生产库，或者oracle迁移mysql）
使用配置文件后，业务开发所有公共修改都在配置文件中，这会被动要求如果程序员想修改表结构，必须修改同一个配置文件。
另外数据库中我们一般会把外键关系删除，外键关系如果没有的话工具用起来会大打折扣。

2.为什么配置文件使用excel？
方便，因为一开始自己就在windows上进行开发，这个工具当时也只是想给自己公司用而已，也没考虑过开源，如果有必要以后可能考虑支持其他形式的配置文件。

3.有没有觉得这个工具有什么缺点？
一般越通用的东西都越难用，比如原生的mybatis，他需要考虑各种场景，很多东西他不敢也不能写死，都需要留给应用者去自行开发。
我觉得hhnzBatis相比mybatis肯定是更好用了，但是他也会有明显的缺点，就是应用场景会狭窄一些，你必须满足它规定的一些要求才可以用，其他的不行。但我想80%业务场景都能满足这种要求。
尤其是一些小项目，或者有些个人开发者想自己开发一套管理系统或者网站，实在是太方便了。

4.会不会觉得工具中有些地方规定的太死？
其实这个问题和上面有点类似，确实也是这样的，比如我规定表名必须T_打头，外键关系必须怎样怎样，而且只能是这个不能是其他。
其实在设计数据库时，你可以说我就要以L_打头，就不用下划线，其实只要一个团队有统一的规范什么的都是可以的。但是我没法去满足所有团队的场景，只能说业内大部分是某种形式。当然我也可以说把这些个性化的东西拿出来让用户自己配置，但是这样一来又跟一些原生的框架有什么区别呢？大量的配置，大量的二次开发。hhnzBatis原本的目的就只有一个，尽量好用，我给你省掉很多东西，前提是你得按我的要求来。这个其实是用户自己选择的问题。


